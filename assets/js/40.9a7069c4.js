(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{402:function(t,e,r){"use strict";r.r(e);var v=r(44),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"react生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期"}},[t._v("#")]),t._v(" react生命周期")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("挂载阶段")]),t._v(" "),r("th",[t._v("更新阶段")]),t._v(" "),r("th",[t._v("说明")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("constructor")]),t._v(" "),r("td"),t._v(" "),r("td",[t._v("组件初始化，继承父类")])]),t._v(" "),r("tr",[r("td",[t._v("--")]),t._v(" "),r("td",[t._v("getDerivedStateFromProps(props, state)")]),t._v(" "),r("td",[t._v("静态方法，，获取到最新的props和state将props映射为state属性，必须有返回值")])]),t._v(" "),r("tr",[r("td",[t._v("--")]),t._v(" "),r("td",[t._v("shouldComponentUpdate(props)")]),t._v(" "),r("td",[t._v("组件挂在之后，对组件状态进行判定，决定是否更新，默认返回true")])]),t._v(" "),r("tr",[r("td",[t._v("render")]),t._v(" "),r("td",[t._v("render")]),t._v(" "),r("td",[t._v("将jsx函数转为fiber节点并返回")])]),t._v(" "),r("tr",[r("td",[t._v("--")]),t._v(" "),r("td",[t._v("getSnapShotBeforeUpdate(preProps, preState)")]),t._v(" "),r("td",[t._v("获取更新前的props和state,必须有返回值")])]),t._v(" "),r("tr",[r("td",[t._v("--")]),t._v(" "),r("td",[t._v("componentDidUpdate(nextProps, nextState, SnapValue)")]),t._v(" "),r("td",[t._v("render方法执行完毕后，可以获取更新前的props和state，以及getSnapBeforeUpdate传入的数据")])]),t._v(" "),r("tr",[r("td",[t._v("componentDidUpdate")]),t._v(" "),r("td",[t._v("--")]),t._v(" "),r("td",[t._v("组件挂载完成后执行")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);